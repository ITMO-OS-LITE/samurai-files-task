name: Samurai's Files Tests

on:
  push:
  workflow_dispatch:

jobs:
  check_formatting:
    name: Code formatting check
    runs-on: ubuntu-latest

    steps:
      - name: Download student repository
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Check formatting
        uses: jidicula/clang-format-action@v4.11.0
        with:
          clang-format-version: '18'
          check-path: '.'

  buildtest:
    needs: check_formatting

    name: "Building and testing with ${{ matrix.toolchain.name }} (${{ matrix.buildtype }} configuration)"

    strategy:
        fail-fast: true

        matrix:
          toolchain:
            - { name: Clang 18, compiler: clang-18 }
            - { name: GCC 11,   compiler: gcc-11   }

          buildtype:
            - Release
            - Debug
            - RelWithDebInfo
            - Sanitized
            - ThreadSanitized

    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Download student repository
        uses: actions/checkout@v4

      - name: Install build tools
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          ninja: true
          cmake: true

      - name: Install required packages
        run: sudo apt-get update && sudo apt-get install -y tree

      - name: Fixup sanitizer(s)
        run: sudo sysctl vm.mmap_rnd_bits=28

      - name: Build solution
        run: cmake -S . --preset "${{ matrix.buildtype }}" -G Ninja && cmake --build . -j

      - name: rmtrash
        run: |
          names=("abc" "a c" "*" "***" "this is sparta" "normal_name")

          for name in "${names[@]}"; do
            touch "${name}"
            echo "Generated file named \"${name}\"."
          done

          for name in "${names[@]}"; do
            sudo ./rmtrash "${name}"
          done

          for name in "${names[@]}"; do
            if [ -f "${name}" ]; then
              echo "File named \"${name}\" should not exists after removing."
              exit 1
            fi
          done

          cat ~/.trash.log

      - name: backup
        run: |
          mkdir -p ~/source

          names=("abc" "a c" "*" "***" "this is sparta" "normal_name")
          directories=("folder1" "fold er2")

          for name in "${names[@]}"; do
            touch "~/source/${name}"
            echo "Generated file named \"${name}\"."
            for directory in "${directories[@]}"; do
              mkdir -p ~/source/"${directory}"
              touch "~/source/${directory}/${name}"
              echo "Generated file named \"${name}\" in \"${directory}\"."
            done
          done

          sudo ./backup
          cat ~/backup-report

          new_names=("abc2" "a c2" "*2" "***2" "this is sparta2" "normal_name2")
          new_directories=("folder1 2" "fold er2 2")

          for name in "${new_names[@]}"; do
            touch "~/source/${name}"
            echo "Generated file named \"${name}\"."
            for directory in "${new_directories[@]}"; do
              mkdir -p ~/source/"${directory}"
              touch "~/source/${directory}/${name}"
              echo "Generated file named \"${name}\" in \"${directory}\"."
            done
          done

          sudo ./backup
          cat ~/backup-report

      - name: upback
        run: |
          sudo ./upback
          tree ~/restore/
